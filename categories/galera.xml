<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>blog-dump (Posts about galera)</title><link>https://dciabrin.net/</link><description></description><atom:link href="https://dciabrin.net/categories/galera.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2025 &lt;a href="mailto:damien.ciabrini@gmail.com"&gt;Damien Ciabrini&lt;/a&gt; </copyright><lastBuildDate>Sat, 27 Sep 2025 18:11:54 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Troubleshooting open_files_limit in MariaDB</title><link>https://dciabrin.net/posts/mariadb-open-files-limit/mariadb-open-files-limit/</link><dc:creator>Damien Ciabrini</dc:creator><description>&lt;div&gt;&lt;p&gt;It may happen in the MariaDB logs that you see failures to set &lt;code&gt;open_files_limit&lt;/code&gt;:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;160318 21:48:04 [Warning] option 'open_files_limit': unsigned value 18446744073709551615 adjusted to 4294967295
160318 21:48:04 [Warning] option 'open_files_limit': unsigned value 18446744073709551615 adjusted to 4294967295
160318 21:48:04 [Warning] Could not increase number of max_open_files to more than 1024 (request: 4907)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Meaning MariaDB was unable to raise the limit of maximum file descriptors at startup, with all the subsequent problems it can cause. Sometimes it is simply due to a bad setting in configuration files, such as:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;open_files_limit=-1
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://dciabrin.net/posts/mariadb-open-files-limit/mariadb-open-files-limit/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>galera</category><category>mariadb</category><guid>https://dciabrin.net/posts/mariadb-open-files-limit/mariadb-open-files-limit/</guid><pubDate>Tue, 22 Mar 2016 14:01:05 GMT</pubDate></item><item><title>Galera boot process in Open Stack HA and manual override</title><link>https://dciabrin.net/posts/galera-boot-process-and-manual-override/galera-boot-process-and-manual-override/</link><dc:creator>Damien Ciabrini</dc:creator><description>&lt;div&gt;&lt;p&gt;Deployments of OpenStack that rely on MariaDB+Galera benefit from a HA database thanks to Galera's synchronous replication. In such deployments, the Galera cluster is typically managed via Pacemaker, by means of a galera resource agent.&lt;/p&gt;
&lt;p&gt;While Galera itself has its own notion of cluster management (membership, health check, write-set replication...), a resource agent is still necessary for Pacemaker to perform the basic cluster management duties, for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Starting up the Galera servers on the available nodes in the cluster&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Health monitoring and recovery actions on failure (e.g. fencing)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This document describes the concepts involved in booting a Galera cluster, how the galera resource agent implements the boot process of a galera cluster, and how it can be overriden for recovery scenarios.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dciabrin.net/posts/galera-boot-process-and-manual-override/galera-boot-process-and-manual-override/"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>galera</category><category>openstack</category><guid>https://dciabrin.net/posts/galera-boot-process-and-manual-override/galera-boot-process-and-manual-override/</guid><pubDate>Fri, 02 Oct 2015 16:45:05 GMT</pubDate></item></channel></rss>